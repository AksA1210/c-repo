

#include <iostream>

using namespace std;

class student
{
    char name;
    int rollno;
    int marks1,marks2,marks3;
    char grade[1];
  public:
    void input();
    void calcgrade();
    void display();
};
void student::input()
{
    for (int i=0;i<n;i++)
    {
        cout<<"Enter name of the student : "<<" ";
        cin>>name;
        cout<<"Enter rollno of the student : "<<" ";
        cin>>rollno;
        cout<<"Enter marks of the student secured for subject 1 : "<<" ";
        cin>>marks1;
        cout<<"Enter marks of the student secured for subject 2 : "<<" ";
        cin>>marks2;
        cout<<"Enter marks of the student secured for subject 3 : "<<" ";
        cin>>marks3;
    }
    
}
void student::calcgrade()
{
    char grade;
    int avg;
    avg=(marks1+marks2+marks3)/3;
    cout<<"The average marks secured is : "<<avg<<endl;
    if (avg>=90)
    {
        grade='A';
    }
    if (avg<90 and avg>=80)
    {
        grade='B';
    }
    if (avg<80 and avg>=70)
    {
        grade='C';
    }
    if (avg<70 and avg>=60)
    {
        grade='D';
    }
    if (avg<60)
    {
        grade='E';
    }
    if (avg<50)
    {
        grade='F';
    }
    cout<<"The grade of the student is : "<< grade<<endl;
    
}
void student::display()
{
    cout<<"The name of the student is : "<< name<<endl;
    cout<<"The rollno of the student is: "<< rollno<<endl;
    cout<<"The marks of the student secured in subject1 is : "<< marks1<<endl;
    cout<<"The marks of the student secured in subject2 is : "<< marks2<<endl;
    cout<<"The marks of the student secured in subject3 is : "<< marks3<<endl;
}
int main()
{
    student a;
    int x;
    do
    {
        cout<<"You can do the following : "<<endl;
        cout<<"Enter appropriate number : "<<endl;
        cout<<"1 : Input the details of the student "<<endl;
        cout<<"2 : Calculate the grade secured by the student "<<endl;
        cout<<"3 : Display the details of the student "<<endl;
        cout<<"4 : Quit "<<endl;
        cout<<endl;
        cout<<"\n\nWhat is your option ?"<<" ";
        cin>>x;
        switch(x)
        {
            case 1: 
               int n;
               cout<<"Enter the number of students : "<<" ";
               cin>>n;
               char X[n];
               for (int i=0;i<n;i++)
               {
                   X[i].input();
               }
            break;
            case 2: a.calcgrade();
            break;
            case 3: a.display();
            break;
            case 4: break;
            default:cout<<"Error ! Please try again "<<endl;
        }
    } while (x!=4);
    
    return(0);
    
}    



1.
#include <iostream>

using namespace std;

class student
{
    char name[20];
    int rollno;
    int marks1,marks2,marks3;
    char grade[1];
  public:
    void input();
    void calcgrade();
    void display();
};
void student::input()
{
    cout<<"Enter name of the student : "<<" ";
    cin>>name;
    cout<<"Enter rollno of the student : "<<" ";
    cin>>rollno;
    cout<<"Enter marks of the student secured for subject 1 : "<<" ";
    cin>>marks1;
    cout<<"Enter marks of the student secured for subject 2 : "<<" ";
    cin>>marks2;
    cout<<"Enter marks of the student secured for subject 3 : "<<" ";
    cin>>marks3;
}
void student::calcgrade()
{
    char grade;
    int avg;
    avg=(marks1+marks2+marks3)/3;
    cout<<"The average marks secured is : "<<avg<<endl;
    if (avg>=90)
    {
        grade='A';
    }
    if (avg<90 and avg>=80)
    {
        grade='B';
    }
    if (avg<80 and avg>=70)
    {
        grade='C';
    }
    if (avg<70 and avg>=60)
    {
        grade='D';
    }
    if (avg<60)
    {
        grade='E';
    }
    if (avg<50)
    {
        grade='F';
    }
    cout<<"The grade of the student is : "<< grade<<endl;
    
}
void student::display()
{
    cout<<"The name of the student is : "<< name<<endl;
    cout<<"The rollno of the student is: "<< rollno<<endl;
    cout<<"The marks of the student secured in subject1 is : "<< marks1<<endl;
    cout<<"The marks of the student secured in subject2 is : "<< marks2<<endl;
    cout<<"The marks of the student secured in subject3 is : "<< marks3<<endl;
}
int main()
{
    student a;
    int x;
    do
    {
        cout<<"You can do the following : "<<endl;
        cout<<"Enter appropriate number : "<<endl;
        cout<<"1 : Input the details of the student "<<endl;
        cout<<"2 : Calculate the grade secured by the student "<<endl;
        cout<<"3 : Display the details of the student "<<endl;
        cout<<"4 : Quit "<<endl;
        cout<<endl;
        cout<<"\n\nWhat is your option ?"<<" ";
        cin>>x;
        switch(x)
        {
            case 1: a.input();
            break;
            case 2: a.calcgrade();
            break;
            case 3: a.display();
            break;
            case 4: break;
            default:cout<<"Error ! Please try again "<<endl;
        }
    } while (x!=4);
    
    return(0);
    
}    

2.
#include<iostream>
#include <cmath>
using namespace std;
class Area
{
    public:
    void area(int);
    void area(int,int);
    void area(float);
    void area(float,float); 
    void area(int,int,int);  
};
void area(int s)
{
    cout<<"Enter side of a square:"<<" ";
    cin>>s;
    cout<<"Area of square is : "<<s*s<<endl;
}
void area(int l,int b)
{
    cout<<"Enter length and breadth of rectangle:"<<" ";
    cin>>l>>b;
    cout<<"Area of rectangle is : "<<l*b<<endl;
}
void area(float r)
{
    cout<<"Enter radius of circle:"<<" ";
    cin>>r;
    cout<<"Area of circle is : "<<3.14*r*r<<endl;
}
void area(float base,float height)
{
   cout<<"Enter base and height of the right angled triangle:"<<" ";
   cin>>base>>height;
   cout<<"Area of right angled triangle is : "<<0.5*base*height<<endl;
}
void area(int side1 ,int side2 ,int side3)
{
    cout<<"Enter the first side length of the triangle : "<<" ";
    cin>>side1;
    cout<<"Enter the second side length of the triangle : "<<" ";
    cin>>side2;
    cout<<"Enter the third side length of the triangle : "<<" ";
    cin>>side3;
    int sp,k,ar,g,m,n;
    sp=(side1+side2+side3)/2;
    g=sp-side1;
    m=sp-side2;
    n=sp-side3;
    k=sp*g*m*n;
    ar=sqrt(k);
    cout<<"Area of the triangle is : "<<ar<<endl;
}
void area(float bs,int h)
{ 
   int arparallel; 
   cout<<"Enter base of the  parallelogram : "<<endl;
   cin>>bs;
   cout<<endl;
   cout<<"Enter height of the parallelogram : "<<endl;
   cin>>h;
   cout<<endl;
   arparallel=bs*h;
   cout<<"Area of the parallelogram is : "<<arparallel<<endl;
}   

int main()
{
    int s,l,b,d,e,f,h;
    int x;
    float r,base,height,bs;
    do
    {
        cout<<"You can do the following : "<<endl;
        cout<<"Enter appropriate number : "<<endl;
        cout<<"1 : AREA OF A SQUARE "<<endl;
        cout<<"2 : AREA OF A RECTANGLE "<<endl;
        cout<<"3 : AREA OF A CIRCLE "<<endl;
        cout<<"4 : AREA OF A RIGHT-ANGLED TRIANGLE "<<endl;
        cout<<"5 : AREA OF A TRIANGLE "<<endl;
        cout<<"6 : AREA OF A PARALLELOGRAM "<<endl;
        cout<<endl;
        cout<<"What is your option ?"<<" ";
        cin>>x;
        switch(x)
        {
            case 1: area(s);
            break;
            case 2: area(l,b);
            break;
            case 3: area(r);
            break;
            case 4: area(base,height);
            break;
            case 5: area(d,e,f);
            break;
            case 6: area(bs,h);
            break;
            case 7: break;
            default:cout<<"Error ! Please try again "<<endl;
        }
    } while (x!=7);
    
    return(0);
}

3.

#include <iostream>

using namespace std;
class bankaccount
{
    char cust_name[20];
    char acc_type[20];
    int acc_no;
    int balance=500;
  public:
    void getdetails()
    {
       cout<<"Enter the name of the depositor : "<<" ";
       cin>>cust_name;
       cout<<"Enter the account number :  "  << " " ;
       cin>>acc_no;
       cout<<"Enter the type of account : "<<" ";
       cin>>acc_type;
       cout<<"Enter the balance amount : "<<"  ";
       cin>>balance;
    }
    void deposit(void)
    {
        int amt;
        cout<<"Enter amount to be deposited : "<<" ";
        cin>>amt;
        balance=balance+amt;
        cout<<"-------------------Amount deposited successfully ------------------- "<<endl;
        cout<<"The total amount in your bank account is : "<<balance;
        cout<<"\n";
    }
    void withdraw(void);
    void display();
};
void bankaccount::withdraw()
{
    int Amount;
    cout<<"Enter the amount to be withdrawn : "<<" ";
    cin>>Amount;
    void getdetails();
    if (balance>Amount)
    {
        balance=balance-Amount;
        cout<<"The current bank balance in your account is : "<<balance;
        cout<<"\n";
        cout << "-------------------Amount withdrawn successfully-------------------"<<endl;
    }
    else
    {
        cout<<"Insufficient bank balance "<<endl;
    }
}
void bankaccount::display()
{
    void getdetails();
    cout<<"The name of the depositor is : "<< cust_name;
    cout<<"\n";
    cout<<"The account number is : "<< acc_no;
    cout<<"\n";
    cout<<"The type of the account is : "<< acc_type;
    cout<<"\n";
    cout<<"The balance amount is : "<< balance;
    cout<<"\n";
}
int main()
{
    bankaccount a;
    int x;
    do
    {
        cout<<"You can do the following : "<<endl;
        cout<<"Enter appropriate number : "<<endl;
        cout<<"1 : Input the details of the customer "<<endl;
        cout<<"2 : Display the details of the bankaccount "<<endl;
        cout<<"3 : Deposit money in the bank account  "<<endl;
        cout<<"4 : Withdraw money from the bank account "<<endl;
        cout<<"5 : Quit "<<endl;
        cout<<endl;
        cout<<"\n\nWhat is your option ?"<<" ";
        cin>>x;
        switch(x)
        {
            case 1: a.getdetails();
            break;
            case 2: a.display();
            break;
            case 3: a.deposit();
            break;
            case 4: a.withdraw();
            case 5: break;
            default:cout<<"Error ! Please try again "<<endl;
        }
    } while (x!=5);
    
    return(0);
}


5.
#include<iostream>
using namespace std;
class  MATRIX
{
    int **p;
    int d1,d2;
  public:
    MATRIX(int x,int y);
    ~MATRIX();
    void get_element(int i,int j,int value)
    {
        p[i][j]=value;
    }
    int &put_element(int i,int j)
    {
        return p[i][j];
    }
};
MATRIX::MATRIX(int x,int y)
{
    d1=x;
    d2=y;
    p=new int*[d1];
    for (int i=0;i<d1;i++)
    {
        p[i]=new int [d2];
    }
}
int main()
{
    int m,n;
    cout<<"Enter size of matrix : "<<" ";
    cin>>m>>n;
    MATRIX A(m,n);
    cout<<"Enter matrix elements row by row "<<endl;
    int i,j,value;
    for(i=0; i<m; i++)
        for (j=0;j<n;j++)
        {
            cin>>value;
            A.get_element(i,j,value);
        }
    cout<<"Matrix created"<<endl;    
    cout<<"Entered matrix : "<<endl;
    for(int i=0;i<m;i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<A.put_element(i,j)<<" ";
        }
        cout<<endl;
    }
    return(0);
}
MATRIX::~MATRIX()
{
    for(int i=0;i<d1;i++)
    {
        delete p[i];
    }
    delete p;
    cout<<"Memory released "<<endl;
    
}
    
   
6.
#include <iostream>
using namespace std;
class TIME
{
    int hours;
    int minutes;
  public:
    void gettime(int h,int m)
    {
        hours=h;
        minutes=m;
    }
    void puttime(void)
    {
        cout<<hours<<"hours and ";
        cout<<minutes<<" minutes"<<"\n";
    }
    void sum(TIME,TIME);  
};
void TIME::sum(TIME t1,TIME t2)
{
    minutes=t1.minutes+t2.minutes;
    hours=minutes/60;
    minutes=minutes%60;
    hours=hours+t1.hours+t2.hours;
}
int main()
{
    TIME T1,T2,T3;
    int h1,h2,m1,m2;
    cout<<"Enter the time in hrs(for T1) : ";
    cin>>h1;
    cout<<"Enter the time in minutes(for T1) : ";
    cin>>m1;
    cout<<"Enter the time in hrs(for T2) : ";
    cin>>h2;
    cout<<"Enter the time in minutes(for T2) : ";
    cin>>m2;
    T1.gettime(h1,m1);
    T2.gettime(h2,m2);
    T3.sum(T1,T2);
    cout<<"T1 = ";
    T1.puttime();
    cout<<"T2 = ";
    T2.puttime();
    cout<<"T3 = ";
    T3.puttime();
    return(0);
}

8.
#include <iostream>

using namespace std;
class complex
{
    float x,y;
  public:
    complex(){}
    complex(float a)
    {
        x=y=a;
    }
    complex(float real,float imag)
    {
        x=real;
        y=imag;
    }
    friend complex sum(complex,complex);
    friend void show(complex);
};
complex sum(complex c1,complex c2)
{
    complex c3;
    c3.x=c1.x+c2.x;
    c3.y=c1.y+c2.y;
    return(c3);
}
void show(complex c)
{
    if (c.y>0)
    {
        cout<<c.x<<"+"<<c.y<<"i " <<"\n";
    }
    else
    {
        cout<<c.x<<"-"<<abs(c.y)<<"i " <<"\n";
    }   
}
int main()
{
    int a,b,p,q;
    cout<<"Enter the real part of the first complex number : "<<" ";
    cin>>a;
    cout<<"Enter the imaginary part of the first complex number : "<<" ";
    cin>>b;
    cout<<"Enter the real part of the second complex number : "<<" ";
    cin>>p;
    cout<<"Enter the imaginary part of the first complex number : "<<" ";
    cin>>q;
    complex A,B,C;
    A=complex(a,b);
    B=complex(p,q);
    C=sum(A,B);
    cout<<"\n";
    cout<<"A = "<<" ";
    show(A);
    cout<<"B = "<<" ";
    show(B);
    cout<<"C = "<<" ";
    show(C);
    return(0);
    
}

9.
#include <iostream>
using namespace std;
class test
{
    int code;
    static int count;
public:
    void setcode(void)
    {
        code=++count;
    } 
    void showcode(void)
    {
        cout<<"Object Number : "<<code<<endl;
    }
    static void showcount(void)
    {
        cout<<"Count : "<<count<<endl;
    }
};
int test::count;
int main()
{
    test t1,t2;
    t1.setcode();
    t2.setcode();
    test::showcount();
    test t3;
    t3.setcode();
    test::showcount();
    t1.showcode();
    t2.showcode();
    t3.showcode();
    return(0);
}

10.

#include <iostream>

using namespace std;
class ITEMS
{
    
    int itemcode[50];
    float itemprice[50];
    int count;
  public:
    void CNT(void)
    {
        count=0;
    }
    void getitem(void);
    void displaysum(void);
    void Remove(void);
    void displayitems(void);
};
void ITEMS::getitem(void)
{
    cout<<" TO ADD AN ITEM "<<endl;
    int n;
    cout<<"Enter the number of items : "<<" ";
    cin>>n;
    for (int i=0; i<n; i++)
    {
        cout<<"Enter item code : ";
        cin>>itemcode[count];
        cout<<"Enter item cost : ";
        cin>>itemprice[count];
        count++;
    }
    
}
void ITEMS::displaysum(void)
{
    cout<<" TO DISPLAY TOTAL VALUE "<<endl;
    float sum=0;
    for (int i=0; i<count; i++)
    {
        sum=sum+itemprice[i];
    }
    cout<<"Total value : "<<sum<<endl;
}
void ITEMS::Remove(void)
{
   cout<<" TO DELETE AN ITEM "<<endl;
   int a;
   cout<<"Enter item code : "<<" ";
   cin>>a;
   for(int i=0;i<count;i++)
   {
       if (itemcode[i]==a)
       {
           itemcode[i]=0;
           itemprice[i]=0;
           cout<<"Item deleted"<<endl;
       }
       else
       {
           cout<<"Code not found"<<endl;
       }
   }
}
void ITEMS::displayitems(void)
{
    cout<<" TO DISPLAY ALL ITEMS "<<endl;
    for (int i=0;i<count;i++)
    {
        cout<<" "<<"Code :   "<<itemcode[i]<<endl;
        cout<<" "<<"Price :  "<<itemprice[i]<<endl;
        cout<<"\n";
    }
}
int main()
{
    ITEMS order;
    int x;
    int size;
    cout<<"Enter the number of  "<<" ";
    cin>>size;
    ITEMS customer[size];
    for(int i=0; i<size; i++)
    {
        cout<<"\nDetails of customer "<<i+1<<"\n";
        customer[i].getitem();
    }
    cout<<"\n";
    for(int i=0; i<size; i++)
    {
        cout<<"\n Items "<<i+1<<"\n";
        customer[i].displayitems();
    }
    order.CNT();
    do
    {
        cout<<"You can do the following : "<<endl;
        cout<<"Enter appropriate number : "<<endl;
        cout<<"1 : Adding items to the shopping list "<<endl;
        cout<<"2 : Deleting items from the shopping list "<<endl;
        cout<<"3 : Display the total no: of items  "<<endl;
        cout<<"4 : Display the total value of an order "<<endl;
        cout<<"5 : Quit "<<endl;
        cout<<endl;
        cout<<"\n\nWhat is your option ?"<<" ";
        cin>>x;
        switch(x)
        {
            case 1: order.getitem();
            break;
            case 2: order.Remove();
            break;
            case 3: order.displayitems();
            break;
            case 4: order.displaysum();
            break;
            case 5: break;
            default:cout<<"Error ! Please try again "<<endl;
        }
    } while (x!=4);
    return(0);
}
  
11.

#include <iostream>
using namespace std;
class class_2;
class class_1
{
    int value1;
   public:
    void indata(int a)
    {
        value1=a;
    }
    void display(void)
    {
        cout<<value1<<"\n";
    }
    friend void exchange(class_1 &,class_2 &); 
};
class class_2
{
    int value2;
   public:
    void indata(int a)
    {
        value2=a;
    }
    void display(void)
    {
        cout<<value2<<"\n";
    }
    friend void exchange(class_1 &,class_2 &); 

};
void exchange(class_1 & x,class_2 &y)
{
    int temp=x.value1;
    x.value1=y.value2;
    y.value2=temp;
}
int main()
{
    class_1 C1;
    class_2 C2;
    int a,b;
    cout<<"Enter the first number : "<<" ";
    cin>>a;
    cout<<"Enter the second number : "<<" ";
    cin>>b;
    C1.indata(a);
    C2.indata(b);
    cout<<endl;
    cout<<"Values before exchange "<<"\n";
    cout<<"The first number is : "; 
    C1.display();
    cout<<"The second number is : ";
    C2.display();
    exchange(C1,C2);
    cout<<endl;
    cout<<"Values after exchange "<<"\n";
    cout<<"The first number is : ";
    C1.display();
    cout<<"The second number is : ";
    C2.display();
    return(0);
}

12.
#include <iostream>

using namespace std;
class complex
{
    float real;
    float imag;
  public:
    void input(float r,float i)
    {
        real=r;
        imag=i;
    }
    friend complex sum(complex,complex);
        void show(void);
};        
void complex :: show(void)
{
    if (imag>0)
    {
        cout<<real<<"+"<<imag<<"i"<<endl;
    }
    else
    {
        cout<<real<<"-"<<abs(imag)<<"i"<<endl;
    }
    
}
complex sum(complex c1,complex c2)
{
    complex c3;
    c3.real=c1.real+c2.real;
    c3.imag=c1.imag+c2.imag;
    return(c3);
}
int main()
{
    complex A,B,C;
    int a,b,p,q;
    cout<<"Enter the real part of the first complex number : "<<" ";
    cin>>a;
    cout<<"Enter the imaginary part of the first complex number : "<<" ";
    cin>>b;
    cout<<"Enter the real part of the second complex number : "<<" ";
    cin>>p;
    cout<<"Enter the imaginary part of the first complex number : "<<" ";
    cin>>q;
    A.input(a,b);
    B.input(p,q);
    C=sum(A,B);
    cout<<"A = ";
    A.show();
    cout<<"B = ";
    B.show();
    cout<<"C = ";
    C.show();
    return 0;
}








