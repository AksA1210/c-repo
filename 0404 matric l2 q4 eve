

#include<iostream>
using namespace std;
class  MATRIX
{
    int **p;
    int x,y;
  public:
    MATRIX(int x,int y);
    //~MATRIX();
    
    
//input
    void input()
    {
       cout<<"Enter matrix elements row by row "<<endl;
    int i,j,value;
    for(i=0; i<x; i++)
    {
        for (j=0;j<y;j++)
        {
            cin>>value;
            get_element(i,j,value);
        }
    }    
    }
//input
    
    
    void get_element(int i,int j,int value)
    {
        p[i][j]=value;
    }
    int &put_element(int i,int j)
    {
        return p[i][j];
    }
    void output()
    {
        cout<<"Entered matrix : "<<endl;
       for(int i=0;i<x;i++)
    {
        for(int j=0;j<y;j++)
        {
            cout<<put_element(i,j)<<" ";
        }
        cout<<endl;
    }  
    }
    MATRIX operator+(MATRIX);
    MATRIX operator*(MATRIX);
};
MATRIX::MATRIX(int a,int b)
{
    x=a;
    y=b;
    p=new int*[x];
    for (int i=0;i<x;i++)
    {
        p[i]=new int [y];
    }
}
MATRIX MATRIX::operator+(MATRIX B)
{
   MATRIX r(x,y);
   if((x!=B.x)||(y!=B.y))
   {
      cout<<"\nMatrix Addition is not possible as the orders of both the matrices are not the same\n\n";
      r.x=0;
      r.y=0;
   }
   else
   {
      r.x=x;
      r.y=y;
   }
   for(int i=0;i<x;i++)
   {
      for(int j=0;j<y;j++)
      {
        int value=put_element(i,j)+B.put_element(i,j);
        r.get_element(i,j,value);
      } 
   }  
    cout<<"Entered matrix : "<<endl;
    for(int i=0;i<x;i++)
    {
        for(int j=0;j<y;j++)
        {
            cout<<r.put_element(i,j)<<" ";
        }
        cout<<endl;
    }  
    return r;
};

MATRIX MATRIX::operator*(MATRIX B)
{
   MATRIX r(x,y);
   if((x!=B.y)||(y!=B.x))
   {
      cout<<"Matrix Multiplication is not possible"<<endl;
      r.x=0;
      r.y=0;
   }
   else
   {
      r.x=x;
      r.y=B.y;
   }
   //for(int i=0;i<x;i++)
      //for(int j=0;j<y;j++)
         //r.A[i][j]=0;
         
   for(int i=0;i<x;i++)
      for(int j=0;j<B.y;j++)
         for(int k=0;(k<y)||(k<B.x);k++)
         {
             int value=put_element(i,k)*B.put_element(k,j);
             r.get_element(i,j,value);
         }
           // r[i][j]+=A[i][k]*B.A[k][j];
    return r;
}
/*MATRIX::~MATRIX()
{
    for(int i=0;i<x;i++)
    {
        delete p[i];
    }
    delete p;
    cout<<"Memory released "<<endl;
    
}*/
    
int main()
{
    /*int m,n;
    cout<<"Enter size of matrix : "<<" ";
    cin>>m>>n;
    MATRIX A(m,n);
    cout<<"Enter matrix elements row by row "<<endl;
    int i,j,value;
    for(i=0; i<m; i++)
    {
        for (j=0;j<n;j++)
        {
            cin>>value;
            A.get_element(i,j,value);
        }
    }    
    cout<<"Matrix created"<<endl;    */
    int x;
    do
    { 
        cout<<"1 matrix"<<endl;
           int m,n;
          cout<<"Enter size of matrix : "<<" ";
          cin>>m>>n;
          MATRIX A(m,n);
           A.input();
           
           cout<<"2 matrix"<<endl;
        cout<<"Enter size of matrix : "<<" ";
        cin>>m>>n;
       MATRIX B(m,n);
           B.input();
           
       cout<<"You can do the following : "<<endl;
       cout<<"Enter appropriate number : "<<endl;
       //cout<<"1 : Input the details of the matrix "<<endl;
       cout<<"2 : Display the matrix "<<endl;
       cout<<"3 : Addition "<<endl;
       cout<<"4 : Multiplication  "<<endl;
       cout<<endl;
       cout<<"Enter your choice : "<<" ";
       cin>>x;
       switch(x)
       {
           case 2: A.output();
           B.output();
           break;
           case 3:
            A+B;
            break;
            case 4: 
            A*B;
            break;
            case 5: break;
            default:cout<<"Error ! Please try again "<<endl;
        }
        char a;
        if (x!=4)
        {
        cout<<endl;
        cout<<"Do you want to continue(y/n)?"<<" ";
        cin>>a;
        if (a=='n')
        {
            x=4;
        }
        }
    } while (x!=4);
   return (0);
}   
    
  
