#include <iostream>
#include <conio.h>
using namespace std;

int **read(int m,int n,char* name)
{
    cout<<name<<" : enter  "<<m*n<<" elements ...\n";
    int **A=new int* [m];
    for(int i=0; i<m; i++)
    {
        A[i]=new int[n];
        for (int j=0;j<n; j++)
        {
            cin>>A[i][j];
        }
    }
    return A;
}
void display(int **A,int m,int n,char* name)
{
    cout<<name<<" : \n";
    for(int i=0; i<m; i++)
    {
        for(int j=0;j<n;j++)
        {
            cout<<A[i][j]<<"\t";
        }
        cout<<"\n";
    }
}
void Delete(int **A,int m)
{
    for(int i=0; i<m; i++)
    {
        delete A[i];
    }
    delete []A;
}
int** add(int **A,int **B,int m,int n)
{
    int **C=new int*[n];
    for(int i=0; i<m; i++)
    {
        C[i]=new int [n];
        for(int j=0;j<n;j++)
        {
            C[i][j]=A[i][j]+B[i][j];
        }
    }
    return C;
}
int** multiply(int **A,int **B,int m1,int n1,int n2)
{
    int **C=new int*[m1];
    for(int i=0;i<m1;i++)
    {
        C[i]=new int[n2];
        for(int j=0;j<n2;j++)
        {
            C[i][j]=0;
            for(int k=0;k<n1;k++)
            {
                C[i][j] +=A[i][k]+B[k][j];
                
            }
        }
    }
    return C;
}

int** transpose(int **A,int m,int n)
{
    int **B=new int*[n];
    for(int i=0;i<n;i++)
    {
        B[i]=new int[m];
        for(int j=0;j<m;j++)
        {
            B[i][j]=A[j][i];
        }
    }
    return B;
}
int main()
{
    int x;
    int m1,m2,n1,n2;
    do
    {
        cout<<"Operations on matrices"<<endl;
        cout<<"1. Addition"<<endl;
        cout<<"2. Multipication"<<endl;
        cout<<"3. Transpose"<<endl;
        cout<<"4. Exit"<<endl;
        cout<<"What is your option ?"<<" ";
        cin>>x;
        switch(x)
        {
            case 1:
               cout<<"Enter the order of matrix ( M x N) : ";
               cin>>m1>>n1;
               cout<<"Enter the order of matrix ( M x N) : ";
               cin>>m2>>n2;
               int X[m1*n1];
               int Y[m2*n2];
               X=read(m1,n1,Matrix X);
               Y=read(m1,n1,Matrix Y);
               int Z[n1*m2];
               Z=add(X,Y,m1,n1);
               display(X,m1,n1,"Matrix X");
               display(Y,m1,n1,"Matrix Y");
               display(Z,m1,n1,"Matrix Z");
               Delete(X,m1);
               Delete(Y,m1);
               Delete(Z,m1);
               break;
            case 2: 
               cout<<"Enter the order of matrix ( M x N) : ";
               cin>>m1>>n1;
               X=read(m1,n1,"Matrix X");
               cout<<"Enter the order of matrix ( M x N) : ";
               cin>>m2>>n2;
               Y=read(m2,n2,"Matrix Y");
               if(n1==m2)
               {
                   Z=multiply(X,Y,m1,n1,n2);
                   display(X,m1,n1,"Matrix X");
                   display(Y,m1,n1,"Matrix Y");
                   display(Z,m1,n1,"Matrix Z=X*Y");
                   Delete(X,m1);
                   Delete(Y,m2);
                   Delete(Z,m1);
                   break;
                   
               }
               else
               {
                   cout<<endl;
                   cout<<"Not possible to multiply these matrices : ";
                   Delete(X,m1);
                   Delete(Z,m2);
               }
            case 3: 
               cout<<"Enter the order of matrix ( M x N) : ";
               cin>>m1>>n1;
               X=read(m1,n1,"Matrix X");
               Y=transpose(X,m1,n1);
               display(X,m1,n1,"Matrix X");
               display(Y,m1,n1,"Matrix Y");
               Delete(X,m1);
               Delete(Y,m2);
               break;
            case 4: 
            break;
        }    
    }while (x!=4);
    return(0);
}

